Layout:
 - Include Insets directly in WindowBaseLayout to simplify doing layout.
   Remove hacks in VBox() that guess padding and use explicit Insets

Annotations:
 - display opacity
 - display count of quad points
 - display border
 - don't allow editing of widget annotations (like mupdf-gl)
 - when selecting annotation in list box, go to its page
 - allow moving some annotations (TEXT)
 - implement delete
 - position to the right of tab->win->hwndFrame
 - change our text higlight to match PDF i.e. use quad points
 - add -dump-annots cmd-line arg that prints out all annotation info from PDF file or dump the info to log / text control
 - add "Create Highlight annotation" menu item to context menu on selection, after "Copy Selection". Maybe add sub-menu with list of colors
 - implement "Delete annotation"
 - a way to save PDF as a new file
 - add label for showing notification that saved or failed to save. Notification should self-dismiss
   after few seconds
 - display more annotation in the list if the window is larger
 - allow setting custom color of annotation. Add "Custom" drop-down colors entry which would show
   a dialog box for setting a color. Remember the custom colors in settings for future use.
 - UI ideas: https://getcleanshot.com/

 - maybe: display flags
 - maybe: use https://devblogs.microsoft.com/oldnewthing/20200515-00/?p=103755 for storing callbacks

------

Layout:
 - maybe: make WindowBase implement ILayout (i.e. fold WindowBaseLayout)
   this would simplify the code to build layouts
 - for visibility of widget, implement sth. like CSS visibility:
   * visible : shown
   * hidden : not shown but takes space for the purpose of layout
   * collapse : not shown and not taking space during layout
 - rework how visibility handling during layout works. Maybe return size
   as (0,0) if visibility == collaps
 - fix HBox the same way as VBox (to properly handle hidden elements)

------

Website: add way to share on twitter, facebook, like on AlternativeTo, Slant, Capterra,
like https://dynalist.io/features/full ("Spread The Word")

------

A system to trigger re-layout when e.g. a button text changes.
Add a way to register function to be called for a given hwnd.
WindowBaseLayout() registers for its hwnd and calls Relayout().
Add TriggerRelayout(HWND) which searches for registered function
for hwnd and its parents.

------

Installer: maybe when running installer as admin user, install to
ProgramFiles directory (maybe would fix https://github.com/sumatrapdfreader/sumatrapdf/issues/1502)

------

Fixes:
- fix https://github.com/sumatrapdfreader/sumatrapdf/issues/1466 (-new-window preserves window state from history)
- fix memleaks on reading .vbkm file
- tweak PositionCloseTo() to run after creation and use actual window position

------

possible refactorings:
- rename GetFzPageInfo => LoadPage(), GetFzPageInfoFast() => GetFzPageInfo()
- split LoadPage() into LoadPage() and LoadPagePartial()
returning Rect
- replace as much use of RECT, SIZE, POINT with Rect, Size, Point
- change how properties are retrieved (in bulk, instead of one-by-one)
- add arm build (based on https://github.com/ntw-au/sumatrapdf)
- convert Add Bookmark dialog to new widget / layout system
- convert hwndTocBox to Window
- move WindowInfo::tocLoaded into TabInfo
- change how we handle parent messages to be like in https://github.com/andlabs/libui
- finish porting LabelWithCloseWnd â‡’ LabelWithCloseCtrl
- turn PasswordUI class into a callback function
- use char* instead of WCHAR* for files in Engines
- turn LinkSaverUI class into a callback function
- make SaveFileAsPDF non-virtual ([https://codeeval.dev/gist/23710422979e7a7235db96254afd0681](https://codeeval.dev/gist/23710422979e7a7235db96254afd0681))
- tga::SerializeBitmap : change to return std::string_view
- rethink how bitmaps are storied. Preferable store them in sth. similar to fz_pixmap() and just blit when painting, like mupdf viewer. Or make a virtual Blit()
- ChmDoc -> ChmFile
- ChmDoc::Load() WCHAR => std::string_view
- test icons at different sizes (for toolbar they look bad at some sizes; see if it's toolbar or mupdf)
- [x] change VBox::childrenCount() to int
- Engine* => Document* rename
- rewrite file function a sniffer as a single function
- extract tab code from Tabs.cpp into a tab control

------

Somewhat big items:
- type-safe string formatter that splits parsing of format string and formatting
- convert to wdl IBitmap
- convert epub to use mupdf
  - start with a test program that just draws every page at a given resolution
- simplify Caption
- smaller scrollbar that gets bigger when mouse is closer to it
- toolbar that is hidden by default by shows when mouse hovers over it
- better text search UI
- integrate vld for mem leak detection
- make home tab always visible
- better looking notification windows
- load documents in a background thread
- improve tabs (re-arrange with drag&drop, allow moving between windows)

------

!! sppedup cbr archives
- unpack images in the background, because that takes most of the time and they don't compress well anyway
- maybe move blitting to WM_PAINT
  - https://www-user.tu-chemnitz.de/~heha/viewchm.php/hs/petzold.chm/petzoldi/ch15d.htm~heha/viewchm.php/hs/petzold.chm/petzoldi/ch15d.htm
  - https://www-user.tu-chemnitz.de/~heha/viewchm.php/hs/petzold.chm/petzoldi/ch15c.htm~heha/viewchm.php/hs/petzold.chm/petzoldi/ch15c.htm
  - https://docs.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-setdibitstodevice
  - https://docs.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-stretchdibits
  - https://stackoverflow.com/questions/1053052/a-generic-error-occurred-in-gdi-jpeg-image-to-memorystream
  - https://devblogs.microsoft.com/oldnewthing/20090714-00/?p=17503
  - https://devblogs.microsoft.com/oldnewthing/20090717-00/?p=17443
  - https://devblogs.microsoft.com/oldnewthing/20180528-00/?p=98845
  - https://devblogs.microsoft.com/oldnewthing/20090716-00/?p=17463
  - https://devblogs.microsoft.com/oldnewthing/20090715-00/?p=17483

------

!! associate PDF files on Win 10
- https://cs.chromium.org/chromium/src/chrome/installer/util/shell_util.cc?type=cs&q="Set+as+default"&sq=package:chromium&g=0&l=802 : chrome code
- https://docs.microsoft.com/en-us/windows/win32/shell/fa-intro
- https://docs.microsoft.com/en-us/windows/win32/shell/vista-managing-defaults
- https://docs.microsoft.com/en-us/windows/win32/shell/default-programs
- https://docs.microsoft.com/en-us/previous-versions/windows/desktop/legacy/ee872123(v=vs.85)
- https://stackoverflow.com/questions/36270355/file-association-and-thumbnail-preview-in-windows-10?rq=1
- https://stackoverflow.com/questions/32178986/windows-10-equivalent-of-launchadvancedassociationui/52198802#52198802

------

icons:
- file open
  - https://github.com/tabler/tabler-icons/blob/master/icons/folder.svg
- print
  - https://github.com/tabler/tabler-icons/blob/master/icons/printer.svg
- next page, prev page
  - https://github.com/tabler/tabler-icons/blob/master/icons/arrow-left.svg
  - https://github.com/tabler/tabler-icons/blob/master/icons/arrow-right.svg
- continuous layout
  - https://github.com/tabler/tabler-icons/blob/master/icons/layout-rows.svg
- single page layout
  - https://github.com/tabler/tabler-icons/blob/master/icons/square.svg
- zoom in, zoom out
  - https://github.com/tabler/tabler-icons/blob/master/icons/zoom-in.svg
  - https://github.com/tabler/tabler-icons/blob/master/icons/zoom-out.svg
- find next, find prev
  - https://github.com/tabler/tabler-icons/blob/master/icons/chevron-left.svg
  - https://github.com/tabler/tabler-icons/blob/master/icons/chevron-right.svg
- find match case
  - https://github.com/tabler/tabler-icons/blob/master/icons/code.svg
- maybe:
  - rotate left / right
  - https://github.com/tabler/tabler-icons/blob/master/icons/home.svg

- possible icon sets
  https://github.com/tabler/tabler-icons
  https://github.com/refactoringui/heroicons (no match case and layout)
  https://feathericons.com/ (no match case and layout)
  https://thenounproject.com/  lots of icons, needs attribution or pay $99/year for attribution and royalty free license
  https://icomoon.io/app/#/select
  https://github.com/microsoft/vscode-codicons
  https://ionicons.com/

- convert to .ico with https://www.icoconverter.com/
- online icon editor: https://redketchup.io/icon-editor could be used to improve the low-resolution icons.

- https://docs.microsoft.com/en-us/windows/package-manager/ : info about windows package manager
- https://devblogs.microsoft.com/commandline/windows-package-manager-preview/

------

Notes / references:
- https://github.com/andlabs/libui : steal ideas for UI windows wrappers
- https://github.com/johnfactotum/foliate : gnome epub reader using epub.js. Written in JavaScript / Gtk
- https://gitlab.com/timofonic/libmobi
- https://en.bandisoft.com/honeyview/ : steal good UI ideas
- https://github.com/yue/yue/tree/master/nativeui : has UI code, including full-featured web view
- https://github.com/neutralinojs/neutralinojs/blob/master/core-windows/src/webview.h : web view code
- https://docs.microsoft.com/en-us/windows/win32/uxguide/vis-layout?redirectedfrom=MSDN#sizingandspacing
  info about spacing beween UI elements on windows
